<launch>
  <!-- Arguments -->
  <arg name="model" default="hestia" />
  <arg name="map_file" default="/home/laser/map_corredor.yaml"/>
  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>

  <!-- Tf trees -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="laser_link" args="0.35 0.0 0.06 0.0 0.0 1.0 0.0 base_link base_scan"/>
      <!-- Ground is 8cm below base_link --> 
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_link" args="0.0 0.0 0.0 0.0 0.0 0.0 base_footprint base_link" /> 

  <!-- Laser Filter -->
  <include file="$(find nav_test)/launch/scan_filter.launch"/>

  <!--Hoverboard driver-->
  <param name="port" type="str" value="/dev/ttyUSB1"/>
  <remap from="/hoverboard_velocity_controller/odom" to="/odom"/>
  <remap from="/hoverboard_velocity_controller/cmd_vel" to="/cmd_vel"/>
  <include file="$(find hoverboard_driver)/launch/hoverboard.launch"/>

  <!--Lidar driver-->
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="base_scan"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!-- AMCL -->
  <include file="$(find nav_test)/launch/amcl.launch"/>

  <!-- move_base -->
  <include file="$(find nav_test)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>
  </group>
</launch>